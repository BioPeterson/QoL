from Bio import SeqIO
#Import needed modules to manipulate fasta files



Uniprot = "/Users/brittanypeterson/Desktop/Masters_of_Bioinformatics/Thesis/uniprot_seqs_homosapiens.fasta"
Human = "/Users/brittanypeterson/Desktop/Masters_of_Bioinformatics/Thesis/GRCh38.p14CDS_TDM.fasta"
Gorilla = "/Users/brittanypeterson/Desktop/Masters_of_Bioinformatics/Thesis/gorGor4-CDS_TDM.fasta"
Bonobo = "/Users/brittanypeterson/Desktop/Masters_of_Bioinformatics/Thesis/panpan1.1-CDS_TDM.fasta"
Macaque = "/Users/brittanypeterson/Desktop/Masters_of_Bioinformatics/Thesis/Mmul_10-CDS_TDM.fasta"
Chimp = "/Users/brittanypeterson/Desktop/Masters_of_Bioinformatics/Thesis/Pan_tro_3.0-CDS_TDM.fasta" 
#fasta files containing CDS gene sequences of interest


sequences_Gor = [i for i in SeqIO.parse(Gorilla,'fasta')]
sequences_Bon = [i for i in SeqIO.parse(Bonobo,'fasta')]
sequences_Mac = [i for i in SeqIO.parse(Macaque,'fasta')]
sequences_Chimp = [i for i in SeqIO.parse(Chimp,'fasta')]
sequences_Hum = [i for i in SeqIO.parse(Human,'fasta')]
#sets up fasta files for sequences to be retrievable

print("Gorilla:", len(sequences_Gor))
print("Bonobo:", len(sequences_Bon))
print("Macaque:", len(sequences_Mac))
print("Chimp:",len(sequences_Chimp))
print("Human",len(sequences_Hum))
#test that all files/sequences can be accessed


def gene_fasta(gene):
#function to search all specified fasta CDS files for the gene of interest    
    gene_of_interest=[]
    for sequence in sequences_Bon:
        if gene in sequence.name:
            gene_of_interest.append(sequence)

    for sequence in sequences_Gor:
        if gene in sequence.name:
            gene_of_interest.append(sequence)


    for sequence in sequences_Mac:
        if gene in sequence.name:
            gene_of_interest.append(sequence)


    for sequence in sequences_Chimp:
        if gene in sequence.name:
            gene_of_interest.append(sequence)

    for sequence in sequences_Hum:
        if gene in sequence.name:
            gene_of_interest.append(sequence)

    print(len(gene_of_interest))
    print("File Created!")
    return(gene_of_interest) 

    



genes_of_interest = ['SULT1A3',
'KCNC1',
'NT5C2',
'MAPK10',
'MAPK4',
'FCER1G',
'GLUL',
'C1R',
'SCN9A',
'SULT1B1',
'CHRM1',
'CHUK',
'F2',
'IL1B',
'UGT2B7',
'NPM1',
'CACNA1S',
'TERT',
'CACNB4',
'FLNA',
'CACNB2',
'KCNV1',
'NOS2',
'KCNG4',
'CYP1B1',
'ABCB1',
'FCGR3A',
'DPEP1',
'GP9',
'RPL18',
'IQGAP1',
'CACNG6',
'HINT1',
'PTGS2',
'CACNA1F',
'MAPK13',
'ABCC10',
'GSTM1',
'NR1I3',
'SNRPD2',
'SLC22A2',
'TPM1',
'MAPK8',
'UGT1A3',
'CYP3A7',
'MAPK12',
'SLC15A1',
'GABRB3',
'SLC47A2',
'CYP4F2',
'KCNA3',
'AK4',
'KCNJ6',
'PLCL1',
'TYMP',
'ZYX',
'SCN7A',
'HP1BP3',
'NME1',
'KCNH7',
'SLC16A1',
'TDO2',
'SLC47A1',
'PADI4',
'MLNR',
'KCNA6',
'SLC22A1',
'DSP',
'KCNAB2',
'MAPK1',
'CAST',
'CACNG4',
'PRNP',
'CASP1',
'FMO3',
'CHRNA3',
'SCN10A',
'UGT2B4',
'TPMT',
'MAPK9',
'KCNH2',
'ABCB4',
'IL15',
'GSTA2',
'PLA2G2E',
'SLCO2B1',
'MAPK6',
'KCNS3',
'SIRT5',
'HMGB1',
'CYP1A1',
'GAPDH',
'BCHE',
'HNMT',
'KCNC3',
'KCNMB2',
'CYP4A11',
'COMT',
'TLR7',
'IMPDH2',
'CASP3',
'TAGLN2',
'CACNG2',
'ANXA2',
'PRDX1',
'KCNJ11',
'CACNA2D4',
'UGT1A10',
'TUBB',
'MAPK3',
'ABCC1',
'PGAM1',
'ESR1',
'RPS6',
'SRSF4',
'SLC10A2',
'GLRA2',
'HLA-B',
'RPS28',
'CACNG5',
'PKM',
'KHSRP',
'UGT1A1',
'ORM2',
'ARF1',
'XDH',
'UGT1A6',
'CYP2B6',
'KCNQ4',
'LDLR',
'SULT1C2',
'CKMT2',
'HNRNPA2B1',
'GAPDHS',
'A2M',
'MAPK15',
'CACNA1D',
'ALPL',
'FCGR2B',
'ABCC3',
'CLIC1',
'ACHE',
'CYP2E1',
'KCNJ12',
'ABCC4',
'KCNV2',
'CYP3A5',
'KCNC4',
'CCT3',
'SUCLG1',
'PPARG',
'FMO1',
'G6PD',
'KCNF1',
'SF1',
'CACNB1',
'TPI1',
'PKLR',
'NT5C',
'NOS3',
'ABCC2',
'SLC28A3',
'CYP21A2',
'NQO2',
'KCNH3',
'KCNB2',
'SULT1C4',
'CYP2C9',
'CYP51A1',
'KCNJ14',
'SLCO2A1',
'MDH1',
'SLC6A14',
'ALDOA',
'ABCG2',
'KCNN1',
'SLCO1B1',
'AK2',
'CXCR4',
'SLC36A2',
'C1QB',
'KCNE2',
'CCR5',
'ALB',
'SCN1A',
'ORM1',
'ATP5MG',
'DDX39B',
'PGR',
'SCN4A',
'TUBB4A',
'CYP3A43',
'KCNE1',
'AVPR2',
'CACNA1A',
'DPYSL2',
'KCNE3',
'KCNMB3',
'MAPK7',
'MAPK14',
'SLC10A1',
'UGT1A8',
'AR',
'LGALS1',
'KCNMB1',
'DHODH',
'VIM',
'LDHB',
'CKMT1A; CKMT1B',
'CES1A1a',
'MYH9',
'MAOB',
'TK2',
'KCND2',
'PCK1',
'DDC',
'ABCB11',
'ALOX5',
'SLC22A4',
'SLC22A7',
'NPEPPS',
'CYP1A2',
'HSP90B1',
'HNRNPD',
'HSPB1',
'KCNA4',
'SLC19A1',
'KCNMA1',
'CYP2B',
'AOX1',
'DDX5',
'KCNQ5',
'ALDH7A1',
'CYP2C18',
'GLRA1',
'KCNH8',
'KCNQ3',
'ALPG',
'SLC29A1',
'UGT1A7',
'IMPDH1',
'KCNQ2',
'CACNA2D2',
'CACNA1G',
'FCER1A',
'GABRR1',
'PCYT2',
'NEU1',
'TLR9',
'CYP2C19',
'CACNG3',
'PFN1',
'FCGR1A',
'P4HB',
'KCNAB1',
'ABCC5',
'SULT1A2',
'MAPK11',
'ACE2',
'MMP9',
'VEGFA',
'PLA2G4A',
'SLC22A5',
'KCNJ4',
'PNLIP',
'CACNA1E',
'KCNE4',
'PGK2',
'KCNE5',
'TRDMT1',
'TUBA1A',
'SCN5A',
'SLC22A11',
'CYP17A1',
'SULT1A1',
'TNF',
'SLC22A8',
'SLC22A12',
'TAGLN',
'RPL23A',
'DNMT1',
'CYCS',
'GPR35',
'KCNA5',
'DBH',
'SCN3A',
'KCNH6',
'CACNG1',
'MPO',
'CACNG7',
'HEXB',
'CYP2C8',
'CFL1',
'SLC22A3',
'EEF1A1',
'CKB',
'CYP2D6',
'SLC29A2',
'CD55',
'KCNG3',
'IL2',
'CTSA',
'PLA2G2A',
'TUBB6',
'KCNN2',
'PPIA',
'POU2F2',
'PTGS1',
'CKM',
'CACNG8',
'CACNA1I',
'SCN2A',
'SFPQ',
'SUCLG2',
'RPL14',
'TOP2B',
'UGT2B15',
'TEK',
'P2RY2',
'TUBB4B',
'RYR1',
'NAT1',
'SHBG',
'CASR',
'PLA2G6',
'FTO',
'NR1I2',
'SLCO3A1',
'RPL4',
'SLCO1B3',
'GABRB1',
'C1QC',
'ADSS1',
'CD4',
'RPS8',
'KCNJ9',
'C1QA',
'GLRB',
'KCNC2',
'UGT1A9',
'KCNB1',
'SLC22A6',
'SLCO1A2',
'SULT4A1',
'RPL10',
'PCYT1A',
'RPS19',
'KCNG1',
'RPL35',
'GPI',
'PGK1',
'SHMT2',
'KCNN3',
'ABCB5',
'ENO1',
'AK1',
'SMPD1',
'TOP1',
'SULT1A4',
'CYP19A1',
'POR',
'ADK',
'ALDH2',
'HNRNPK',
'CYP3A4',
'SLC15A2',
'IDE',
'NME2',
'LRP2',
'ATP5PO']
#gene list based on associated gene names from target UNIPROT-SWISS IDs for target proteins


for gene in genes_of_interest:
    output = gene_fasta(gene)
    SeqIO.write(output,'/Users/brittanypeterson/Desktop/Masters_of_Bioinformatics/Thesis/CDS-By-Gene/'+str(gene)+'.fasta','fasta')
#iterates over the genes of interest to the function and writes their own file to specified location.